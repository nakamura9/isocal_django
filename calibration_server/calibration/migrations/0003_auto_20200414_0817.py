# Generated by Django 2.2.6 on 2020-04-14 06:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('calibration', '0002_auto_20191105_0213'),
    ]

    operations = [
        migrations.RenameField(
            model_name='autoclave',
            old_name='cerficate_timestamp',
            new_name='certificate_timestamp',
        ),
        migrations.RenameField(
            model_name='balance',
            old_name='cerficate_timestamp',
            new_name='certificate_timestamp',
        ),
        migrations.RenameField(
            model_name='genericcalibration',
            old_name='cerficate_timestamp',
            new_name='certificate_timestamp',
        ),
        migrations.AlterField(
            model_name='autoclave',
            name='comments',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='balance',
            name='comments',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='genericcalibration',
            name='comments',
            field=models.TextField(blank=True),
        ),
        migrations.CreateModel(
            name='PressureCalibrationLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applied_mass', models.FloatField(default=0.0)),
                ('input_pressure', models.FloatField(default=0.0)),
                ('measured', models.FloatField(default=0.0)),
                ('calibration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calibration.GenericCalibration')),
            ],
        ),
        migrations.CreateModel(
            name='GenericCalibrationLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_signal', models.FloatField(default=0.0)),
                ('measured', models.FloatField(default=0.0)),
                ('calibration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calibration.GenericCalibration')),
            ],
        ),
        migrations.CreateModel(
            name='BalanceTaringLinearity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tare', models.FloatField(default=0.0)),
                ('indicated', models.FloatField(default=0.0)),
                ('calibration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calibration.Balance')),
            ],
        ),
        migrations.CreateModel(
            name='BalanceSettlingTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement', models.FloatField(default=0.0)),
                ('calibration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calibration.Balance')),
            ],
        ),
        migrations.CreateModel(
            name='BalanceRepeatability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('half_load', models.FloatField(default=0.0)),
                ('full_load', models.FloatField(default=0.0)),
                ('calibration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calibration.Balance')),
            ],
        ),
        migrations.CreateModel(
            name='BalanceOffCenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement', models.FloatField(default=0.0)),
                ('mass_piece', models.FloatField(default=0.0)),
                ('calibration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calibration.Balance')),
            ],
        ),
        migrations.CreateModel(
            name='BalanceLinearityUpDown',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement', models.FloatField(default=0.0)),
                ('calibration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calibration.Balance')),
            ],
        ),
        migrations.CreateModel(
            name='BalanceLinearity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actual', models.FloatField(default=0.0)),
                ('nominal', models.FloatField(default=0.0)),
                ('measurement', models.FloatField(default=0.0)),
                ('calibration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calibration.Balance')),
            ],
        ),
        migrations.CreateModel(
            name='BalanceColdStart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement', models.FloatField(default=0.0)),
                ('nominal', models.FloatField(default=0.0)),
                ('calibration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calibration.Balance')),
            ],
        ),
        migrations.CreateModel(
            name='AutoclaveTemperatureCalibrationLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_signal', models.FloatField(default=0.0)),
                ('measured', models.FloatField(default=0.0)),
                ('calibration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calibration.Autoclave')),
            ],
        ),
        migrations.CreateModel(
            name='AutoclavePressureCalibrationLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applied_mass', models.FloatField(default=0.0)),
                ('input_pressure', models.FloatField(default=0.0)),
                ('measured', models.FloatField(default=0.0)),
                ('calibration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calibration.Autoclave')),
            ],
        ),
    ]
