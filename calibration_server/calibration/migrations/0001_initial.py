# Generated by Django 2.2.6 on 2019-10-31 15:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField(blank=True)),
                ('email', models.CharField(blank=True, max_length=255)),
                ('phone', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Standard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('serial', models.CharField(max_length=255)),
                ('certificate', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_type', models.CharField(choices=[('technician', 'Technician'), ('admin', 'Admin')], max_length=16)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GenericCalibration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cerficate_timestamp', models.DateTimeField(null=True)),
                ('date', models.DateField()),
                ('due', models.DateField()),
                ('serial', models.CharField(blank=True, max_length=255)),
                ('manufacturer', models.CharField(blank=True, max_length=255)),
                ('immersion_depth', models.CharField(blank=True, max_length=255)),
                ('model', models.CharField(blank=True, max_length=255)),
                ('name_of_instrument', models.CharField(blank=True, max_length=255)),
                ('resolution', models.FloatField()),
                ('units', models.CharField(blank=True, max_length=255)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('range_lower', models.FloatField(default=0.0)),
                ('range_upper', models.FloatField(default=0.0)),
                ('comments', models.TextField()),
                ('type', models.CharField(max_length=16)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='calibration.Customer')),
                ('standard', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='calibration.Standard')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cerficate_timestamp', models.DateTimeField(null=True)),
                ('date', models.DateField()),
                ('due', models.DateField()),
                ('serial', models.CharField(blank=True, max_length=255)),
                ('manufacturer', models.CharField(blank=True, max_length=255)),
                ('immersion_depth', models.CharField(blank=True, max_length=255)),
                ('model', models.CharField(blank=True, max_length=255)),
                ('name_of_instrument', models.CharField(blank=True, max_length=255)),
                ('resolution', models.FloatField()),
                ('units', models.CharField(blank=True, max_length=255)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('range_lower', models.FloatField(default=0.0)),
                ('range_upper', models.FloatField(default=0.0)),
                ('comments', models.TextField()),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='calibration.Customer')),
                ('standard', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='calibration.Standard')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Autoclave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cerficate_timestamp', models.DateTimeField(null=True)),
                ('date', models.DateField()),
                ('due', models.DateField()),
                ('serial', models.CharField(blank=True, max_length=255)),
                ('manufacturer', models.CharField(blank=True, max_length=255)),
                ('immersion_depth', models.CharField(blank=True, max_length=255)),
                ('model', models.CharField(blank=True, max_length=255)),
                ('name_of_instrument', models.CharField(blank=True, max_length=255)),
                ('resolution', models.FloatField()),
                ('units', models.CharField(blank=True, max_length=255)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('range_lower', models.FloatField(default=0.0)),
                ('range_upper', models.FloatField(default=0.0)),
                ('comments', models.TextField()),
                ('range_temp_lower', models.FloatField()),
                ('range_temp_upper', models.FloatField()),
                ('resolution_temp', models.FloatField()),
                ('temp_unit', models.CharField(max_length=255)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='calibration.Customer')),
                ('standard', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='calibration.Standard')),
                ('temp_standard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temperature', to='calibration.Standard')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
